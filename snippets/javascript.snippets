# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} = function(${3:first_argument}) 
	{
		${4}
	};
# Function
snippet fn
	var ${1:function_name} = function(${2:argument})
	{
		${3:// body...}
	}
snippet fun
	function ${1:function_name}(${2:argument})
	{
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1}) {${2}};
# if
snippet if
	if(${1:true}) 
	{
		${2}
	};
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:expression})
	{
		case '${3:case}':
			$ {4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		$ {2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for(var ${2:i} = -1, ${3:len}=${1:Things}.length; ++$2 < $3; ) 
	{
		var ${4} = ${5:$1[$2]};
		${6}
	};
# while (...) {...}
snippet wh
	while(${1:/* condition */}) 
	{
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute})
	{
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10};
# Get Elements
snippet gett
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet get
	getElementBy${1:Id}('${2}')${3}

# Property
snippet prop
	var ${1:PropertyName} = ${2:null};
	this.__defineGetter__('$1',function()
	{
		return $1;
	});
	this.__defineSetter__('$1',function(${3:value})
	{
		$1 = $3;
		${4};
	});

##
## ROKE SNIPPETS
##
snippet mod
	(function( exports ){
		${2}
	})( ${1} = {} );

snippet exp
	var ${1:Foo} = exports.$1 = function(${2})
	{
		${3}
	}

snippet int
	var I${1:InterfaceName} = exports.I$1 = new Interface({
		'_interfaceName_':'$1',
		'${2:Member}':${3:Type},
	});
